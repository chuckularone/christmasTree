// This sketch was originally written for Burning Man in 2015.
// It has layed around stagnant for over 8 years.
// I resurected it to drive the Christmas tree in 2023 


#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
    #include <avr/power.h>
#endif
#include <SoftwareSerial.h>

#define PIXPIN 7
#define PIXELS 150
#define HALFPIXELS 75

const int buttonPin = 2;     // the number of the pushbutton pin
const int ledPin =  7;       // the number of the LED pin
int buttonState = 0;         // variable for reading the pushbutton status
int counter = 1;             // Store the number of button presses
int lastButtonState = LOW;   // the previous reading from the input pin

// the following variables are long's because the time, measured in miliseconds,
// will quickly become a bigger number than can be stored in an int.
long lastDebounceTime = 0;  // the last time the output pin was toggled
long debounceDelay = 50;    // the debounce time; increase if the output flickers

Adafruit_NeoPixel strip = Adafruit_NeoPixel(PIXELS, PIXPIN, NEO_GRB + NEO_KHZ800);

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// Setup section
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
void setup() {
  strip.begin();
  strip.setBrightness(30);
  strip.show();
  Serial.begin(9600);
  pinMode(buttonPin, INPUT);
}

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// Start main loop
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
void loop() {
 int i = 0;
  int reading = digitalRead(buttonPin);
  if (reading != lastButtonState) {
    // reset the debouncing timer
    lastDebounceTime = millis();
  }  
  Serial.print("Reading: ");
  Serial.print(reading);
  Serial.print(" :: lastButtonState: ");
  Serial.print(lastButtonState);
  Serial.print(" :: Counter: ");
  Serial.println(counter);

    if ((millis() - lastDebounceTime) > debounceDelay) {
    // whatever the reading is at, it's been there for longer
    // than the debounce delay, so take it as the actual current state:
    // if the button state has changed:
    if (reading != buttonState) {
      buttonState = reading; 
      if (buttonState == HIGH) {
        if (counter <= 6) {
          counter = counter + 1;
          Serial.println("Button Press!");
        } else {
          counter = 1;
        }
      }
    }
    if (counter == 1) {
      randomTwinkle();
    }
    if (counter == 2) {
      twoColor1to5Chase();
    }
    if (counter == 3) {
      theaterChase(strip.Color(127, 255, 127), 50);
    }
    if (counter == 4) {
      rainbowCycle(1);
    }
    if (counter == 5) {
      whites();
    }
    if (counter == 6) {
      wigwags();
    }
  }
  lastButtonState = reading;//end loop
}


// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// Functions below
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
void wigwags(void) {
  int waitTime=500;
  int i = 0;
  strip.setBrightness(60);
  for ( i = 0; i < HALFPIXELS; i++) {
    strip.setPixelColor(i, strip.Color(0,255,0));
  }
  for ( i = HALFPIXELS; i < PIXELS; i++) {
    strip.setPixelColor(i, strip.Color(255,0,0));
  }
  strip.show();
  delay(waitTime);
  for ( i = HALFPIXELS; i < PIXELS; i++) {
    strip.setPixelColor(i, strip.Color(0,255,0));
  }
  for ( i = 0; i < HALFPIXELS; i++) {
    strip.setPixelColor(i, strip.Color(255,0,0));
  }
  strip.show();
  delay(waitTime);
}

void greenie(void) {
  int i = 0;
  for ( i = 0; i < PIXELS; i++) {
    strip.setPixelColor(i, strip.Color(0,255,0));
    strip.setBrightness(30);
    strip.show();
  }
}

void whites(void) {
  int i = 0;
  for ( i = 0; i < PIXELS; i++) {
    strip.setPixelColor(i, strip.Color(255,255,255));
    strip.setBrightness(150);
    strip.show();
  }
}

void randomTwinkle(void) {
  int i = 0;
  int rand1 = 0;
  int rand2 = 0;
  int rand3 = 0;
  int rand4 = 0;
  int rand5 = 0;
  
  for ( i = 0; i < PIXELS; i++) {
    strip.setPixelColor(i, strip.Color(255,255,255));
    strip.setBrightness(150);
    strip.show();
    if (i = PIXELS) { //exit when all lights are lit
      break;
    }
  }
  delay(100);
  for ( i = 0; i < PIXELS; i++) {
    rand1 = random(PIXELS);
    rand2 = random(PIXELS);
    rand3 = random(PIXELS);
    rand4 = random(PIXELS);
    rand5 = random(PIXELS);
    strip.setPixelColor(rand1, strip.Color(255,0,0));
    strip.setPixelColor(rand2, strip.Color(0,255,0));
    strip.setPixelColor(rand3, strip.Color(0,0,255));
    strip.setPixelColor(rand4, strip.Color(0,255,255));
    strip.setPixelColor(rand5, strip.Color(255,255,0));
    strip.setBrightness(150);
    strip.show();
    delay(75);
  }
}

void twoColor1to5Chase(void) {
  int i = 0;
  // Color codes aquired from https://html-color.codes/
  int red =  (255,0,0);
  int blue = (0,0,255);
  int green = (0,255,0);
  int yellow = (255,255,0);
  int white = (255,255,255);
  int pink = (228,0,124); //mexican pink
  int purple = (191,0,225); //electric purple
  int orange = (255,69,0); //orange red
  int cyan = (0,255,255);
  int magenta = (255,0,255);
  int grey = (128,128,128); 
  int gray = grey;

  color1 = red;
  for ( i = 0; i < PIXELS; i++) {
    strip.setPixelColor(i, strip.Color(color1));
    strip.setBrightness(150);
    strip.show();
    delay(75);
  }

}

// Slightly different, this makes the rainbow equally distributed throughout
void rainbowCycle(uint8_t wait) {
  uint16_t i, j;
  strip.setBrightness(30);
  for(j=0; j<256; j++) { // 5 cycles of all colors on wheel
    for(i=0; i< strip.numPixels(); i++) {
      strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + j) & 255));
    }
    strip.show();
    delay(wait);
  }
}

// Input a value 0 to 255 to get a color value.
// The colours are a transition r - g - b - back to r.
uint32_t Wheel(byte WheelPos) {
  WheelPos = 255 - WheelPos;
  if(WheelPos < 85) {
   return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3);
  } else if(WheelPos < 170) {
    WheelPos -= 85;
   return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3);
  } else {
   WheelPos -= 170;
   return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0);
  }
}

//Theatre-style crawling lights.
void theaterChase(uint32_t c, uint8_t wait) {
  for (int j=0; j<10; j++) {  //do 10 cycles of chasing
    for (int q=0; q < 3; q++) {
      for (int i=0; i < strip.numPixels(); i=i+3) {
        strip.setPixelColor(i+q, c);    //turn every third pixel on
      }
      strip.setBrightness(30);
      strip.show();
     
      delay(wait);
     
      for (int i=0; i < strip.numPixels(); i=i+3) {
        strip.setPixelColor(i+q, 0);        //turn every third pixel off
      }
    }
  }
}

void cylon(void) {
  strip.setBrightness(30);
  int i = 0;
  int LEDorder[] = {3, 2, 1, 0, 11, 10, 9, 8};
  for ( i = 0; i < 9; i++) {
    strip.setPixelColor(LEDorder[i], strip.Color(0,0,255));
    strip.show();
    delay(100);
  }
  for ( i = 9; i < 1; i--) {
    strip.setPixelColor(LEDorder[i-1], strip.Color(0,0,255));
    strip.show();
    delay(100);
  }     
}
